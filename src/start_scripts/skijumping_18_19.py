from src.crypto.paillier_abb import PaillierABB
from src.election.borda.borda_implementations import FisWorldCup
from src.election.election_authority import ElectionAuthority
from src.protocols.sublinear import SubLinearProtocolSuite
from src.util.logging import setup_logging
from src.util.position_vote import PositionVote

setup_logging()


def ski_jumping_18_19(key_generator):
    """https://de.wikipedia.org/wiki/Skisprung-Weltcup_2018/19#Einzelergebnisse"""
    # seems to Stefan Kraft got 2 additional points
    candidates = ['Ryōyū Kobayashi', 'Stefan Kraft', 'Kamil Stoch', 'Piotr Żyła', 'Dawid Kubacki', 'Robert Johansson', 'Markus Eisenbichler', 'Johann André Forfang', 'Timi Zajc', 'Karl Geiger', 'Stephan Leyhe', 'Jewgeni Klimow', 'Domen Prevc', 'Roman Koudelka', 'Halvor Egner Granerud', 'Daniel Huber', 'Killian Peier', 'Andreas Wellinger', 'Andreas Stjernen', 'Junshirō Kobayashi', 'Richard Freitag', 'Jakub Wolny', 'Yukiya Satō', 'Simon Ammann', 'Antti Aalto', 'Philipp Aschenwald', 'Michael Hayböck', 'Anže Semenič', 'Peter Prevc', 'Anže Lanišek', 'Manuel Fettner', 'Daiki Itō', 'Wladimir Sografski', 'David Siegel', 'Daniel-André Tande', 'Anders Fannemel', 'Noriaki Kasai', 'Constantin Schmid', 'Naoki Nakamura', 'Stefan Hula', 'Robin Pedersen', 'Viktor Polášek', 'Jan Hörl', 'Marius Lindvik', 'Clemens Aigner', 'Jernej Damjan', 'Maciej Kot', 'Gregor Schlierenzauer', 'Martin Hamann', 'Dmitri Wassiljew', 'Kevin Bickner', 'Žak Mogel', 'MacKenzie Boyd-Clowes', 'Žiga Jelar', 'Lukáš Hlava', 'Keiichi Satō', 'Artti Aigro', 'Severin Freund', 'Pius Paschke', 'Jurij Tepeš', 'Taku Takeuchi', 'Tilen Bartol', 'Čestmír Kožíšek', 'Bor Pavlovčič', 'Alex Insam', 'Roman Trofimow', 'Gregor Deschwanden', 'Paweł Wąsek', 'Thomas Aasen Markeng', 'Eetu Nousiainen', 'Tomáš Vančura', 'Ulrich Wohlgenannt', 'Jarkko Määttä', 'Markus Schiffner', 'Moritz Baer', 'Andreas Alamommo', 'Andreas Schuler', 'Michail Nasarow']
    e = ElectionAuthority(key_generator, FisWorldCup(candidates, 28))
    e.add_generic_vote(PositionVote([3, 21, 4, 6, 8, 16, 15, 10, 5, 9, 2, 1, 0, 25, 0, 18, 17, 9, 35, 17, 22, 23, 0, 46, 7, 0, 32, 26, 0, 20, 27, 34, 47, 13, 36, 14, 0, 0, 44, 38, 0, 21, 0, 0, 24, 0, 29, 48, 0, 0, 42, 0, 37, 0, 29, 0, 0, 0, 39, 0, 43, 0, 0, 40, 28, 0, 45, 0, 0, 0, 0, 0, 31, 0, 0, 0, 33, 0]), count=1)
    e.add_generic_vote(PositionVote([1, 26, 2, 3, 35, 8, 15, 13, 7, 5, 16, 31, 4, 19, 24, 14, 41, 11, 42, 19, 21, 11, 0, 37, 32, 42, 55, 60, 0, 10, 22, 52, 6, 49, 33, 36, 38, 0, 28, 20, 0, 51, 0, 0, 44, 23, 53, 12, 0, 46, 59, 24, 27, 0, 18, 0, 39, 29, 0, 0, 58, 0, 54, 33, 0, 0, 30, 0, 0, 47, 0, 0, 45, 0, 0, 62, 56, 48]), count=1)
    e.add_generic_vote(PositionVote([1, 10, 3, 5, 12, 7, 25, 9, 11, 8, 6, 26, 4, 17, 27, 46, 28, 2, 50, 18, 14, 13, 0, 0, 33, 16, 0, 46, 0, 21, 15, 32, 46, 22, 24, 40, 38, 0, 23, 44, 0, 42, 0, 0, 41, 37, 0, 0, 0, 0, 49, 20, 45, 0, 34, 0, 19, 31, 0, 0, 0, 0, 43, 36, 0, 0, 35, 0, 0, 0, 0, 0, 29, 0, 0, 0, 30, 39]), count=1)
    e.add_generic_vote(PositionVote([3, 5, 7, 2, 20, 6, 32, 1, 8, 10, 4, 11, 14, 23, 9, 23, 16, 13, 0, 30, 40, 47, 0, 0, 12, 39, 0, 0, 0, 25, 0, 44, 15, 43, 46, 33, 35, 0, 27, 21, 0, 42, 0, 0, 0, 19, 36, 34, 0, 17, 18, 50, 31, 0, 0, 0, 0, 22, 0, 0, 41, 0, 29, 0, 38, 26, 28, 0, 0, 0, 0, 0, 49, 0, 0, 0, 48, 45]), count=1)
    e.add_generic_vote(PositionVote([1, 20, 4, 3, 11, 9, 10, 2, 24, 5, 25, 8, 14, 17, 37, 28, 12, 13, 0, 19, 31, 0, 0, 0, 6, 40, 0, 0, 0, 0, 16, 23, 15, 29, 21, 7, 34, 0, 18, 36, 0, 22, 0, 0, 43, 35, 41, 45, 0, 32, 26, 0, 38, 0, 42, 0, 0, 30, 0, 0, 39, 0, 47, 50, 27, 44, 0, 0, 0, 0, 0, 0, 48, 0, 0, 0, 33, 0]), count=1)
    e.add_generic_vote(PositionVote([7, 8, 9, 2, 13, 17, 48, 4, 12, 1, 6, 5, 20, 11, 16, 3, 21, 14, 30, 22, 32, 41, 18, 45, 15, 0, 10, 0, 35, 36, 28, 40, 19, 44, 0, 24, 49, 0, 42, 31, 0, 25, 0, 37, 27, 23, 26, 0, 0, 0, 34, 38, 29, 0, 0, 0, 0, 50, 0, 0, 0, 0, 0, 0, 33, 0, 47, 0, 0, 0, 0, 0, 0, 39, 0, 0, 43, 0]), count=1)
    e.add_generic_vote(PositionVote([1, 12, 3, 2, 5, 7, 6, 15, 18, 4, 11, 8, 18, 9, 21, 0, 31, 24, 17, 20, 0, 22, 32, 29, 10, 37, 41, 0, 16, 34, 48, 44, 26, 25, 0, 23, 30, 0, 14, 27, 0, 39, 0, 13, 51, 36, 42, 0, 0, 49, 33, 0, 28, 0, 50, 0, 0, 47, 0, 0, 0, 0, 0, 0, 38, 0, 46, 0, 0, 0, 0, 0, 40, 43, 0, 0, 0, 0]), count=1)
    e.add_generic_vote(PositionVote([1, 3, 8, 6, 5, 7, 2, 25, 9, 12, 13, 20, 0, 11, 0, 10, 19, 39, 4, 50, 16, 26, 15, 14, 22, 35, 27, 36, 18, 0, 48, 31, 23, 17, 44, 33, 0, 24, 29, 43, 34, 28, 0, 0, 0, 47, 0, 0, 0, 0, 0, 0, 31, 0, 46, 0, 0, 36, 21, 0, 0, 0, 0, 40, 0, 0, 0, 0, 0, 0, 0, 0, 0, 30, 44, 0, 0, 0]), count=1)
    e.add_generic_vote(PositionVote([1, 49, 6, 11, 3, 19, 2, 22, 8, 19, 7, 16, 0, 4, 9, 15, 23, 32, 10, 5, 24, 13, 17, 21, 32, 42, 45, 27, 0, 0, 28, 12, 25, 17, 34, 14, 32, 29, 26, 43, 30, 0, 0, 0, 0, 46, 0, 0, 50, 0, 37, 0, 0, 0, 0, 0, 0, 41, 35, 0, 0, 0, 0, 0, 31, 48, 0, 0, 0, 0, 0, 0, 0, 47, 38, 0, 39, 0]), count=1)
    e.add_generic_vote(PositionVote([1, 2, 5, 42, 18, 11, 13, 21, 10, 24, 4, 19, 0, 9, 0, 14, 7, 20, 3, 26, 8, 34, 6, 17, 41, 23, 21, 37, 0, 12, 16, 15, 27, 28, 43, 25, 32, 33, 31, 30, 0, 44, 29, 0, 35, 45, 0, 0, 0, 0, 39, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 38, 36, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 49, 0]), count=1)
    e.add_generic_vote(PositionVote([1, 3, 12, 13, 2, 9, 5, 17, 43, 10, 4, 26, 0, 6, 7, 11, 8, 15, 25, 29, 27, 45, 23, 16, 20, 35, 14, 21, 0, 39, 24, 22, 28, 48, 36, 31, 32, 19, 34, 36, 18, 46, 33, 0, 41, 50, 40, 0, 0, 0, 0, 0, 38, 0, 0, 0, 0, 0, 0, 0, 0, 0, 30, 0, 47, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 46, 0, 0]), count=1)
    e.add_generic_vote(PositionVote([1, 4, 3, 7, 2, 13, 0, 11, 12, 19, 5, 0, 0, 6, 25, 24, 9, 26, 20, 21, 17, 40, 16, 15, 23, 22, 33, 10, 40, 18, 8, 36, 28, 14, 0, 0, 44, 0, 36, 29, 46, 31, 32, 47, 0, 27, 34, 0, 0, 0, 0, 0, 38, 0, 0, 0, 0, 0, 0, 0, 0, 39, 35, 0, 47, 0, 0, 0, 0, 50, 0, 0, 0, 30, 0, 49, 0, 0]), count=1)
    e.add_generic_vote(PositionVote([7, 2, 3, 10, 1, 4, 6, 12, 21, 19, 18, 0, 0, 14, 13, 31, 11, 26, 8, 28, 16, 29, 20, 9, 23, 37, 22, 15, 0, 17, 24, 49, 27, 5, 0, 36, 40, 0, 45, 30, 52, 32, 38, 44, 0, 35, 25, 0, 0, 0, 46, 0, 48, 0, 0, 0, 0, 0, 0, 0, 0, 42, 51, 0, 41, 0, 0, 0, 0, 50, 0, 0, 0, 34, 0, 43, 0, 0]), count=1)
    e.add_generic_vote(PositionVote([7, 1, 36, 19, 12, 2, 26, 4, 7, 24, 7, 11, 23, 10, 5, 6, 13, 0, 20, 37, 25, 22, 3, 46, 18, 29, 16, 43, 0, 13, 32, 41, 31, 0, 0, 38, 33, 15, 0, 17, 0, 39, 21, 0, 0, 37, 30, 0, 0, 0, 0, 0, 35, 0, 0, 0, 0, 0, 0, 0, 0, 44, 28, 0, 0, 0, 0, 27, 0, 0, 0, 0, 0, 34, 0, 43, 42, 0]), count=1)
    e.add_generic_vote(PositionVote([5, 1, 2, 11, 15, 3, 10, 0, 6, 42, 9, 0, 24, 4, 7, 8, 14, 13, 0, 19, 0, 35, 20, 0, 0, 0, 0, 12, 0, 16, 23, 18, 0, 0, 0, 39, 32, 0, 36, 27, 30, 28, 17, 47, 21, 0, 50, 0, 0, 0, 37, 0, 0, 25, 0, 26, 0, 0, 0, 0, 22, 0, 31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 41, 29, 0, 33, 46]), count=1)
    e.add_generic_vote(PositionVote([3, 1, 6, 4, 12, 9, 16, 10, 2, 35, 8, 0, 13, 14, 4, 18, 27, 17, 0, 22, 0, 30, 28, 0, 0, 0, 0, 24, 0, 11, 19, 26, 0, 0, 0, 37, 7, 0, 20, 25, 0, 34, 15, 0, 31, 0, 21, 0, 0, 0, 0, 0, 0, 32, 0, 23, 0, 0, 0, 0, 0, 29, 47, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 45, 36, 0, 41, 0]), count=1)
    e.add_generic_vote(PositionVote([14, 6, 5, 4, 2, 17, 3, 7, 1, 16, 11, 23, 20, 12, 8, 9, 27, 13, 18, 21, 22, 25, 34, 0, 40, 15, 0, 19, 0, 24, 0, 0, 0, 0, 10, 26, 29, 31, 38, 0, 0, 0, 0, 0, 33, 0, 0, 0, 0, 0, 37, 0, 0, 35, 0, 0, 0, 0, 0, 0, 0, 0, 36, 0, 0, 0, 0, 0, 0, 39, 28, 32, 0, 0, 0, 0, 0, 0]), count=1)
    e.add_generic_vote(PositionVote([1, 3, 6, 4, 22, 5, 2, 8, 9, 18, 35, 29, 13, 19, 15, 37, 32, 0, 23, 27, 20, 16, 10, 30, 40, 7, 11, 12, 0, 34, 0, 25, 39, 0, 14, 0, 21, 33, 36, 0, 0, 0, 0, 0, 17, 0, 0, 0, 30, 0, 0, 0, 0, 31, 0, 0, 0, 0, 0, 26, 0, 24, 0, 0, 0, 0, 0, 0, 0, 0, 38, 28, 0, 0, 0, 0, 0, 0]), count=1)
    e.add_generic_vote(PositionVote([9, 7, 1, 4, 3, 15, 10, 8, 13, 30, 17, 2, 16, 25, 33, 23, 0, 31, 12, 24, 0, 6, 19, 21, 20, 0, 14, 18, 0, 36, 0, 22, 0, 0, 5, 34, 11, 0, 38, 0, 0, 0, 35, 0, 0, 0, 0, 0, 29, 0, 0, 0, 0, 37, 0, 0, 0, 0, 0, 26, 0, 32, 28, 0, 0, 0, 0, 0, 0, 27, 39, 0, 0, 0, 0, 0, 0, 0]), count=1)
    e.add_generic_vote(PositionVote([2, 4, 1, 10, 28, 3, 0, 7, 0, 6, 16, 0, 0, 17, 5, 0, 8, 32, 0, 21, 19, 14, 40, 12, 9, 11, 13, 22, 0, 24, 23, 27, 18, 0, 0, 0, 46, 33, 47, 0, 0, 36, 20, 0, 26, 0, 33, 30, 15, 0, 0, 0, 39, 38, 45, 0, 0, 0, 0, 48, 0, 0, 37, 25, 0, 0, 0, 43, 0, 31, 0, 0, 0, 0, 0, 29, 44, 41]), count=1)
    e.add_generic_vote(PositionVote([3, 12, 2, 4, 5, 17, 36, 10, 9, 1, 35, 7, 39, 26, 14, 21, 8, 19, 0, 12, 6, 33, 30, 15, 18, 16, 24, 28, 20, 0, 31, 15, 0, 0, 0, 45, 40, 34, 0, 22, 0, 29, 0, 32, 0, 23, 37, 42, 38, 0, 0, 0, 46, 25, 0, 0, 0, 0, 0, 0, 0, 0, 0, 44, 43, 0, 0, 0, 27, 0, 0, 0, 0, 0, 0, 47, 41, 0]), count=1)
    e.add_generic_vote(PositionVote([1, 10, 7, 3, 5, 15, 2, 9, 8, 6, 22, 13, 32, 24, 14, 12, 11, 19, 0, 18, 4, 16, 35, 23, 25, 17, 20, 29, 40, 0, 28, 27, 0, 0, 0, 31, 36, 21, 0, 34, 0, 41, 42, 33, 0, 0, 30, 0, 39, 0, 0, 0, 48, 26, 47, 0, 0, 0, 0, 0, 0, 0, 0, 43, 46, 0, 0, 0, 38, 44, 0, 0, 0, 0, 0, 49, 45, 0]), count=1)
    e.add_generic_vote(PositionVote([5, 2, 13, 26, 24, 1, 10, 9, 14, 17, 0, 22, 6, 7, 0, 15, 20, 34, 41, 11, 0, 19, 8, 12, 18, 4, 23, 0, 3, 37, 27, 45, 34, 0, 0, 0, 28, 21, 0, 36, 16, 30, 31, 0, 25, 0, 0, 0, 37, 0, 0, 0, 46, 33, 29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 42, 39, 0, 0, 0, 0, 0, 0, 0, 0, 32]), count=1)
    e.add_generic_vote(PositionVote([3, 1, 4, 33, 8, 2, 15, 5, 39, 20, 23, 11, 7, 22, 47, 19, 10, 14, 30, 6, 0, 21, 27, 12, 25, 9, 16, 0, 26, 44, 17, 38, 0, 0, 0, 0, 36, 28, 49, 24, 18, 32, 42, 13, 34, 0, 0, 0, 0, 35, 0, 0, 29, 0, 0, 0, 0, 0, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 40, 0, 0, 0, 0, 31]), count=1)
    e.add_generic_vote(PositionVote([1, 3, 17, 11, 18, 10, 9, 5, 4, 8, 34, 6, 0, 21, 32, 39, 14, 37, 2, 20, 7, 13, 22, 15, 29, 19, 25, 0, 12, 37, 26, 16, 0, 0, 0, 0, 0, 24, 28, 46, 27, 23, 47, 30, 40, 33, 0, 0, 0, 44, 45, 0, 31, 0, 0, 0, 0, 0, 42, 0, 0, 0, 48, 0, 0, 0, 0, 50, 36, 0, 0, 0, 43, 0, 0, 0, 0, 35]), count=1)
    e.add_generic_vote(PositionVote([2, 3, 12, 9, 10, 6, 5, 7, 25, 22, 0, 14, 1, 36, 28, 17, 32, 11, 0, 33, 13, 4, 15, 8, 18, 0, 21, 19, 15, 0, 34, 0, 0, 0, 0, 26, 0, 20, 29, 0, 31, 36, 0, 23, 0, 0, 0, 0, 0, 27, 0, 0, 24, 0, 0, 0, 0, 0, 39, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 30]), count=1)
    e.add_generic_vote(PositionVote([2, 14, 18, 3, 7, 25, 1, 8, 4, 9, 0, 11, 5, 0, 36, 16, 0, 26, 0, 13, 15, 12, 24, 6, 34, 22, 17, 20, 10, 0, 0, 27, 0, 0, 0, 0, 19, 23, 28, 0, 20, 0, 0, 0, 0, 0, 34, 0, 0, 30, 0, 0, 0, 37, 0, 0, 0, 0, 0, 39, 0, 31, 0, 29, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), count=1)
    e.add_generic_vote(PositionVote([1, 17, 11, 4, 6, 16, 3, 8, 5, 7, 0, 10, 2, 0, 28, 21, 26, 20, 0, 15, 24, 12, 14, 13, 25, 23, 18, 9, 19, 29, 30, 21, 27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), count=1)

    result = e.trigger_evaluation() # winner was Ryōyū Kobayashi


if __name__ == '__main__':
    setup_logging()

    ski_jumping_18_19(lambda: PaillierABB.gen_trustees(64, 3, 2, SubLinearProtocolSuite))
